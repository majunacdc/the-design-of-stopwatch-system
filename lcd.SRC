; .\lcd.SRC generated from: lcd.c
; COMPILER INVOKED BY:
;        E:\Keil_v5\C51\BIN\C51.EXE lcd.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2) SRC(.\lcd.SRC)

$NOMOD51

NAME	LCD

K4	BIT	0B0H.3
K5	BIT	0B0H.4
P0	DATA	080H
P1	DATA	090H
P2	DATA	0A0H
P3	DATA	0B0H
T0	BIT	0B0H.4
AC	BIT	0D0H.6
T1	BIT	0B0H.5
T2	BIT	090H.0
EA	BIT	0A8H.7
IE	DATA	0A8H
EXF2	BIT	0C8H.6
RD	BIT	0B0H.7
ES	BIT	0A8H.4
IP	DATA	0B8H
RI	BIT	098H.0
INT0	BIT	0B0H.2
CY	BIT	0D0H.7
TI	BIT	098H.1
INT1	BIT	0B0H.3
RCAP2H	DATA	0CBH
PS	BIT	0B8H.4
SP	DATA	081H
LCD1602_RS	BIT	0A0H.6
T2EX	BIT	090H.1
OV	BIT	0D0H.2
RCAP2L	DATA	0CAH
LCD1602_RW	BIT	0A0H.5
C_T2	BIT	0C8H.1
WR	BIT	0B0H.6
RCLK	BIT	0C8H.5
TCLK	BIT	0C8H.4
SBUF	DATA	099H
PCON	DATA	087H
SCON	DATA	098H
TMOD	DATA	089H
TCON	DATA	088H
IE0	BIT	088H.1
IE1	BIT	088H.3
B	DATA	0F0H
LCD1602_E	BIT	0A0H.7
CP_RL2	BIT	0C8H.0
ACC	DATA	0E0H
ET0	BIT	0A8H.1
ET1	BIT	0A8H.3
TF0	BIT	088H.5
ET2	BIT	0A8H.5
TF1	BIT	088H.7
TF2	BIT	0C8H.7
RB8	BIT	098H.2
TH0	DATA	08CH
EX0	BIT	0A8H.0
IT0	BIT	088H.0
TH1	DATA	08DH
TB8	BIT	098H.3
EX1	BIT	0A8H.2
IT1	BIT	088H.2
TH2	DATA	0CDH
P	BIT	0D0H.0
SM0	BIT	098H.7
TL0	DATA	08AH
SM1	BIT	098H.6
TL1	DATA	08BH
SM2	BIT	098H.5
TL2	DATA	0CCH
PT0	BIT	0B8H.1
PT1	BIT	0B8H.3
RS0	BIT	0D0H.3
PT2	BIT	0B8H.5
TR0	BIT	088H.4
RS1	BIT	0D0H.4
TR1	BIT	088H.6
TR2	BIT	0C8H.2
PX0	BIT	0B8H.0
PX1	BIT	0B8H.2
DPH	DATA	083H
DPL	DATA	082H
EXEN2	BIT	0C8H.3
REN	BIT	098H.4
T2CON	DATA	0C8H
RXD	BIT	0B0H.0
TXD	BIT	0B0H.1
Beed	BIT	090H.0
F0	BIT	0D0H.5
PSW	DATA	0D0H
K1	BIT	0B0H.0
K2	BIT	0B0H.1
K3	BIT	0B0H.2
?PR?_Lcd1602_Delay1ms?LCD                SEGMENT CODE 
?PR?_LcdWriteCom?LCD SEGMENT CODE 
?PR?_LcdWriteData?LCD                    SEGMENT CODE 
?PR?LcdInit?LCD      SEGMENT CODE 
?PR?BEED?LCD         SEGMENT CODE 
	PUBLIC	BEED
	PUBLIC	LcdInit
	PUBLIC	_LcdWriteData
	PUBLIC	_LcdWriteCom
	PUBLIC	_Lcd1602_Delay1ms
; #include "lcd.h"
; #include "reg52.h"
; 
; 
; /*******************************************************************************
; * 函 数 名         : Lcd1602_Delay1ms
; * 函数功能		   : 延时函数，延时1ms
; * 输    入         : c
; * 输    出         : 无
; * 说    名         : 该函数是在12MHZ晶振下，12分频单片机的延时。
; *******************************************************************************/
; 
; void Lcd1602_Delay1ms(uint c)   //误差 0us

	RSEG  ?PR?_Lcd1602_Delay1ms?LCD
L?0018:
	USING	0
	CLR  	LCD1602_RW
	MOV  	P0,R7
	MOV  	R7,#01H
	MOV  	R6,#00H
	LCALL	_Lcd1602_Delay1ms
	SETB 	LCD1602_E
	MOV  	R7,#05H
	MOV  	R6,#00H
_Lcd1602_Delay1ms:
	USING	0
			; SOURCE LINE # 13
;---- Variable 'c?040' assigned to Register 'R6/R7' ----
; {
			; SOURCE LINE # 14
;     uchar a,b;              
; 	for (; c>0; c--)
			; SOURCE LINE # 16
?C0001:
	SETB 	C
	MOV  	A,R7
	SUBB 	A,#00H
	MOV  	A,R6
	SUBB 	A,#00H
	JC   	?C0010
; 	{
			; SOURCE LINE # 17
; 		 for (b=199;b>0;b--)
			; SOURCE LINE # 18
;---- Variable 'b?042' assigned to Register 'R5' ----
	MOV  	R5,#0C7H
?C0004:
; 		 {
			; SOURCE LINE # 19
; 		  	for(a=1;a>0;a--);
			; SOURCE LINE # 20
;---- Variable 'a?041' assigned to Register 'R4' ----
	MOV  	R4,#01H
?C0007:
	DJNZ 	R4,?C0007
; 		 }      
			; SOURCE LINE # 21
?C0006:
	DJNZ 	R5,?C0004
; 	}
			; SOURCE LINE # 22
?C0003:
	MOV  	A,R7
	DEC  	R7
	JNZ  	?C0001
	DEC  	R6
?C0017:
	SJMP 	?C0001
; }  
			; SOURCE LINE # 23
?C0010:
	RET  	
; END OF _Lcd1602_Delay1ms

; 
; /*
; void Lcd1602_Delay1ms(uint c)    //精确延时
; { 
; 
; 	#pragma asm                   
; 	  MOV R0,#0FFH
; 	  MOV R1,#0FFH
; 	  D_LOOP1:
; 	  DJNZ R0,D_LOOP1
; 	  MOV R0,#0FFH
; 	  DJNZ R1,D_LOOP
; 	#pragma endasm
; }	
; 	*/
; 
; 
; /*******************************************************************************
; * 函 数 名         : LcdWriteCom
; * 函数功能		   : 向LCD写入一个字节的命令
; * 输    入         : com
; * 输    出         : 无
; *******************************************************************************/
; 
; void LcdWriteCom(uchar com)	  //写入命令

	RSEG  ?PR?_LcdWriteCom?LCD
_LcdWriteCom:
	USING	0
			; SOURCE LINE # 48
;---- Variable 'com?143' assigned to Register 'R7' ----
; {
			; SOURCE LINE # 49
; 	LCD1602_E = 0;     //使能
			; SOURCE LINE # 50
	CLR  	LCD1602_E
; 	LCD1602_RS = 0;	   //选择发送命令
			; SOURCE LINE # 51
	CLR  	LCD1602_RS
; 	LCD1602_RW = 0;	   //选择写入
			; SOURCE LINE # 52
; 	
; 	LCD1602_DATAPINS = com;     //放入命令
			; SOURCE LINE # 54
; 	Lcd1602_Delay1ms(1);		//等待数据稳定
			; SOURCE LINE # 55
; 
; 	LCD1602_E = 1;	          //写入时序
			; SOURCE LINE # 57
; 	Lcd1602_Delay1ms(5);	  //保持时间
			; SOURCE LINE # 58
	LCALL	L?0018
; 	LCD1602_E = 0;
			; SOURCE LINE # 59
	CLR  	LCD1602_E
; }
			; SOURCE LINE # 60
	RET  	
; END OF _LcdWriteCom

; 
; /*******************************************************************************
; * 函 数 名         : LcdWriteData
; * 函数功能		   : 向LCD写入一个字节的数据
; * 输    入         : dat
; * 输    出         : 无
; *******************************************************************************/		   
; 
; void LcdWriteData(uchar dat)			//写入数据

	RSEG  ?PR?_LcdWriteData?LCD
_LcdWriteData:
	USING	0
			; SOURCE LINE # 69
;---- Variable 'dat?244' assigned to Register 'R7' ----
; {
			; SOURCE LINE # 70
; 	LCD1602_E = 0;	//使能清零
			; SOURCE LINE # 71
	CLR  	LCD1602_E
; 	LCD1602_RS = 1;	//选择输入数据
			; SOURCE LINE # 72
	SETB 	LCD1602_RS
; 	LCD1602_RW = 0;	//选择写入
			; SOURCE LINE # 73
; 
; 	LCD1602_DATAPINS = dat; //写入数据
			; SOURCE LINE # 75
; 	Lcd1602_Delay1ms(1);
			; SOURCE LINE # 76
; 
; 	LCD1602_E = 1;   //写入时序
			; SOURCE LINE # 78
; 	Lcd1602_Delay1ms(5);   //保持时间
			; SOURCE LINE # 79
	LCALL	L?0018
; 	LCD1602_E = 0;
			; SOURCE LINE # 80
	CLR  	LCD1602_E
; }
			; SOURCE LINE # 81
	RET  	
; END OF _LcdWriteData

; 
; /*******************************************************************************
; * 函 数 名       : LcdInit()
; * 函数功能		 : 初始化LCD屏
; * 输    入       : 无
; * 输    出       : 无
; *******************************************************************************/		   
; 
; void LcdInit()						  //LCD初始化子程序

	RSEG  ?PR?LcdInit?LCD
LcdInit:
	USING	0
			; SOURCE LINE # 90
; {
			; SOURCE LINE # 91
;  	LcdWriteCom(0x38);  //开显示
			; SOURCE LINE # 92
	MOV  	R7,#038H
	LCALL	_LcdWriteCom
; 	LcdWriteCom(0x0c);  //开显示不显示光标
			; SOURCE LINE # 93
	MOV  	R7,#0CH
	LCALL	_LcdWriteCom
; 	LcdWriteCom(0x06);  //写一个指针加1
			; SOURCE LINE # 94
	MOV  	R7,#06H
	LCALL	_LcdWriteCom
; 	LcdWriteCom(0x01);  //清屏
			; SOURCE LINE # 95
	MOV  	R7,#01H
	LCALL	_LcdWriteCom
; 	LcdWriteCom(0x80);  //设置数据指针起点
			; SOURCE LINE # 96
	MOV  	R7,#080H
	LJMP 	_LcdWriteCom
; END OF LcdInit

; }
; 
; void BEED(void)

	RSEG  ?PR?BEED?LCD
BEED:
	USING	0
			; SOURCE LINE # 99
; { 
			; SOURCE LINE # 100
; 	if(K4==0)
			; SOURCE LINE # 101
	JB   	K4,?C0014
; 	{
			; SOURCE LINE # 102
; 		Beed=1;K4=1;
			; SOURCE LINE # 103
	SETB 	Beed
	SETB 	K4
; 	}
			; SOURCE LINE # 104
	RET  	
?C0014:
; else 
; 	{
			; SOURCE LINE # 106
; 		Beed=0;Lcd1602_Delay1ms(10);Beed=1;
			; SOURCE LINE # 107
	CLR  	Beed
	MOV  	R7,#0AH
	MOV  	R6,#00H
	LCALL	_Lcd1602_Delay1ms
	SETB 	Beed
; 	}
			; SOURCE LINE # 108
; }			; SOURCE LINE # 109
?C0016:
	RET  	
; END OF BEED

	END
